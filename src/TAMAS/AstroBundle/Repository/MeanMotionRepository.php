<?php

namespace TAMAS\AstroBundle\Repository;

use TAMAS\AstroBundle\DISHASToolbox\QueryGenerator as QG;
use TAMAS\AstroBundle\Entity as E;
use TAMAS\AstroBundle\Entity\TableContent;

/**
 * MeanMotionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MeanMotionRepository extends \Doctrine\ORM\EntityRepository
{

    /**
     * getDependencies
     *
     * This method is part of the process of forcing deletion of an object.
     * We need to know what are the related fields that are linked to originalText (in order to unlink it before deleting it)
     *
     * @return array
     */
    public function getDependancies()
    {
        return [
            TableContent::class => [
                'meanMotion' => [
                    'unlinkMethod' => 'setMeanMotion',
                    'oneToMany' => true
                ]
            ]
        ];
    }

    /**
     * This method generates the metadata associated with a record of a parameter set
     * in order to be displayed in a box
     *
     * @param E\MeanMotion $meanMotion
     * @return array
     */
    public function getBoxData(E\MeanMotion $meanMotion){
        if (!$meanMotion->getSubTimeUnit() || !$meanMotion->getSubTimeUnit()->getSubType() == "collected years"){
            // We are only interested by "Collected years" mean motion
            return null;
        } elseif (!$meanMotion->getPlaceName() && !$meanMotion->getLongOrigBase()){
            // If the place name and longitude weren't provided, the user probably didn't fill the needed metadata
            return null;
        }
        $def = $meanMotion->getSubTimeUnit()->getDefinition();

        $id = $meanMotion->getId();

        $query = QG::newMatchFilter("table_contents.mean_motion.place_name", $meanMotion->getPlaceName());

        $place = $meanMotion->getPlaceName() ? $meanMotion->getPlaceName() : "Unknown place";
        $explanation = "<button type='button' class='btn' data-container='body' data-toggle='popover' data-placement='bottom' data-html='true' data-trigger='focus' 
                                 data-original-title='About localisation parameter in « Collected years » tables' 
                                 data-content='$def' 
                                 title='' style='background-color: rgb(250,250,250); padding: 0;'>
                             <img src='/img/question.svg' style='height: 16px; margin-left: 6px; margin-top: -5px' alt='Question mark'>
                         </button>";

        $long = $meanMotion->getLongOrigBase() ? $meanMotion->getLongOrigBase() : "No longitude";
        $meridian = $meanMotion->getMeridian() ? ", ".$meanMotion->getMeridian() : "";
        $longUnit = $meanMotion->getLongTypeOfNumber() ? " (".$meanMotion->getLongTypeOfNumber()->getShortName().")" : "";

        $epoch = $meanMotion->getEpoch() ? $meanMotion->getEpoch() : "No epoch";
        $root = $meanMotion->getRootOrigBase() ? $meanMotion->getRootOrigBase() : "No root";
        return [
            "title" => "Localisation parameter n°$id",
            "place" => $place.$explanation,
            "long" => "Long.: $long$meridian$longUnit",
            "epoch" => "Epoch: $epoch / Root: $root",
            "query" => [
                "query" => QG::setFilters([$query]),
                "hover" => "Find all mean motions calculated for the same place",
                "title" => "All mean motion tables calculated for $place",
                "entity" => "edited_text"
            ]
        ];
    }
}
